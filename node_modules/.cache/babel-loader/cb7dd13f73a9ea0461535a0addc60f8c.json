{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/swati/Desktop/DesignSunday/POSTS/posts/src/AppRouter.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Changelogs from './containers/Changelogs';\nimport Home from './containers/Home';\nimport JobGuide from './containers/JobGuide';\nimport ScrollToTop from './components/ScrollToTop.js';\n\nclass AppRouter extends Component {\n  constructor(props) {\n    super(props);\n    this.listRef = /*#__PURE__*/React.createRef();\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    // Are we adding new items to the list?\n    // Capture the scroll position so we can adjust scroll later.\n    if (prevProps.list.length < this.props.list.length) {\n      const list = this.listRef.current;\n      return list.scrollHeight - list.scrollTop;\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // If we have a snapshot value, we've just added new items.\n    // Adjust scroll so these new items don't push the old ones out of view.\n    // (snapshot here is the value returned from getSnapshotBeforeUpdate)\n    if (snapshot !== null) {\n      const list = this.listRef.current;\n      list.scrollTop = list.scrollHeight - snapshot;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      ref: this.myRef,\n      children: [/*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/job-guide/:id\",\n          component: JobGuide\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/changelogs\",\n          component: Changelogs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AppRouter;","map":{"version":3,"sources":["/Users/swati/Desktop/DesignSunday/POSTS/posts/src/AppRouter.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Changelogs","Home","JobGuide","ScrollToTop","AppRouter","constructor","props","listRef","createRef","getSnapshotBeforeUpdate","prevProps","prevState","list","length","current","scrollHeight","scrollTop","componentDidUpdate","snapshot","render","myRef"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,SAAN,SAAwBT,SAAxB,CAAkC;AAChCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,OAAL,gBAAeb,KAAK,CAACc,SAAN,EAAf;AACD;;AAEDC,EAAAA,uBAAuB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC5C;AACA;AACA,QAAID,SAAS,CAACE,IAAV,CAAeC,MAAf,GAAwB,KAAKP,KAAL,CAAWM,IAAX,CAAgBC,MAA5C,EAAoD;AAClD,YAAMD,IAAI,GAAG,KAAKL,OAAL,CAAaO,OAA1B;AACA,aAAOF,IAAI,CAACG,YAAL,GAAoBH,IAAI,CAACI,SAAhC;AACD;;AACD,WAAO,IAAP;AACD;;AAEDC,EAAAA,kBAAkB,CAACP,SAAD,EAAYC,SAAZ,EAAuBO,QAAvB,EAAiC;AACjD;AACA;AACA;AACA,QAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrB,YAAMN,IAAI,GAAG,KAAKL,OAAL,CAAaO,OAA1B;AACAF,MAAAA,IAAI,CAACI,SAAL,GAAiBJ,IAAI,CAACG,YAAL,GAAoBG,QAArC;AACD;AACF;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAE,KAAKC,KAAlB;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEnB;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,gBAAlB;AAAmC,UAAA,SAAS,EAAEC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,aAAlB;AAAgC,UAAA,SAAS,EAAEF;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAtC+B;;AAyClC,eAAeI,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Changelogs from './containers/Changelogs';\nimport Home from './containers/Home';\nimport JobGuide from './containers/JobGuide';\nimport ScrollToTop from './components/ScrollToTop.js';\n\nclass AppRouter extends Component {\n  constructor(props) {\n    super(props);\n    this.listRef = React.createRef();\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    // Are we adding new items to the list?\n    // Capture the scroll position so we can adjust scroll later.\n    if (prevProps.list.length < this.props.list.length) {\n      const list = this.listRef.current;\n      return list.scrollHeight - list.scrollTop;\n    }\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // If we have a snapshot value, we've just added new items.\n    // Adjust scroll so these new items don't push the old ones out of view.\n    // (snapshot here is the value returned from getSnapshotBeforeUpdate)\n    if (snapshot !== null) {\n      const list = this.listRef.current;\n      list.scrollTop = list.scrollHeight - snapshot;\n    }\n  }\n  render() {\n    return (\n      <Router ref={this.myRef}>\n        <ScrollToTop />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/job-guide/:id' component={JobGuide} />\n          <Route exact path='/changelogs' component={Changelogs} />\n\n          {/* Personal Information */}\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default AppRouter;\n"]},"metadata":{},"sourceType":"module"}