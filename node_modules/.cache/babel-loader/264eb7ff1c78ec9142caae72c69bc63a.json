{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WindowScroller = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _ScrollManager = require(\"./ScrollManager\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nclass ManagedWindowScroller extends _react.default.Component {\n  componentDidMount() {\n    const manager = this.props.manager;\n\n    if (manager) {\n      manager._restoreInitial();\n    } else {\n      console.warn('WindowScroller only works when nested within a ScrollManager'); // eslint-disable-line no-console\n    }\n  }\n\n  componentDidUpdate() {\n    const manager = this.props.manager;\n\n    if (manager) {\n      manager._restoreWindow();\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n\n}\n\nManagedWindowScroller.propTypes = {\n  manager: _propTypes.default.instanceOf(_ScrollManager.ScrollManager).isRequired,\n  children: _propTypes.default.node\n};\nconst WindowScroller = (0, _ScrollManager.withManager)(ManagedWindowScroller);\nexports.WindowScroller = WindowScroller;","map":{"version":3,"sources":["/Users/swati/Desktop/DesignSunday/POSTS/posts/node_modules/react-scroll-manager/lib/WindowScroller.js"],"names":["Object","defineProperty","exports","value","WindowScroller","_react","_interopRequireDefault","require","_propTypes","_ScrollManager","obj","__esModule","default","ManagedWindowScroller","Component","componentDidMount","manager","props","_restoreInitial","console","warn","componentDidUpdate","_restoreWindow","render","children","propTypes","instanceOf","ScrollManager","isRequired","node","withManager"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,cAAR,GAAyB,KAAK,CAA9B;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIC,UAAU,GAAGF,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,IAAIE,cAAc,GAAGF,OAAO,CAAC,iBAAD,CAA5B;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,MAAMG,qBAAN,SAAoCR,MAAM,CAACO,OAAP,CAAeE,SAAnD,CAA6D;AAC3DC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;;AAEA,QAAIA,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACE,eAAR;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,IAAR,CAAa,8DAAb,EADK,CACyE;AAC/E;AACF;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,UAAML,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;;AAEA,QAAIA,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACM,cAAR;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKN,KAAL,CAAWO,QAAlB;AACD;;AArB0D;;AAyB7DX,qBAAqB,CAACY,SAAtB,GAAkC;AAChCT,EAAAA,OAAO,EAAER,UAAU,CAACI,OAAX,CAAmBc,UAAnB,CAA8BjB,cAAc,CAACkB,aAA7C,EAA4DC,UADrC;AAEhCJ,EAAAA,QAAQ,EAAEhB,UAAU,CAACI,OAAX,CAAmBiB;AAFG,CAAlC;AAIA,MAAMzB,cAAc,GAAG,CAAC,GAAGK,cAAc,CAACqB,WAAnB,EAAgCjB,qBAAhC,CAAvB;AACAX,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WindowScroller = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _ScrollManager = require(\"./ScrollManager\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass ManagedWindowScroller extends _react.default.Component {\n  componentDidMount() {\n    const manager = this.props.manager;\n\n    if (manager) {\n      manager._restoreInitial();\n    } else {\n      console.warn('WindowScroller only works when nested within a ScrollManager'); // eslint-disable-line no-console\n    }\n  }\n\n  componentDidUpdate() {\n    const manager = this.props.manager;\n\n    if (manager) {\n      manager._restoreWindow();\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n\n}\n\nManagedWindowScroller.propTypes = {\n  manager: _propTypes.default.instanceOf(_ScrollManager.ScrollManager).isRequired,\n  children: _propTypes.default.node\n};\nconst WindowScroller = (0, _ScrollManager.withManager)(ManagedWindowScroller);\nexports.WindowScroller = WindowScroller;"]},"metadata":{},"sourceType":"script"}