{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _PathUtils = require('history/lib/PathUtils');\n\nvar setManualScroll = function setManualScroll() {\n  if (typeof window !== 'undefined' && 'scrollRestoration' in window.history) {\n    history.scrollRestoration = 'manual';\n  }\n};\n\nvar createKey = function createKey() {\n  return Math.random().toString(36).substr(2, 6);\n};\n\nvar addScrollKey = function addScrollKey(locationOrString) {\n  var location = typeof locationOrString === 'string' ? (0, _PathUtils.parsePath)(locationOrString) : locationOrString;\n  if (!location.state) location.state = {};\n  location.state.__scrollKey = createKey();\n  return location;\n};\n\nvar useHistoryRestoreScroll = function useHistoryRestoreScroll(createHistory) {\n  return function () {\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    setManualScroll();\n    var scrollableNodes = {}; // TODO: safer sessionStorage stuff\n\n    var positionsByLocation = sessionStorage.positionsByLocation && JSON.parse(sessionStorage.positionsByLocation) || {};\n    var initialScrollKey = sessionStorage.initialScrollKey || createKey();\n    var currentScrollKey = sessionStorage.currentScrollKey || initialScrollKey;\n    var first = true;\n    window.addEventListener('beforeunload', function () {\n      saveScrollPositions();\n      sessionStorage.positionsByLocation = JSON.stringify(positionsByLocation);\n      sessionStorage.currentScrollKey = currentScrollKey;\n      sessionStorage.initialScrollKey = initialScrollKey;\n    });\n    var history = createHistory(options);\n\n    var push = function push(locationWithoutKey) {\n      var location = addScrollKey(locationWithoutKey);\n      history.push(location);\n    };\n\n    var replace = function replace(locationWithoutKey) {\n      var location = addScrollKey(locationWithoutKey);\n      history.replace(location);\n    };\n\n    var registerScroller = function registerScroller(scrollKey, node) {\n      scrollableNodes[scrollKey] = node;\n      restoreNode(scrollKey);\n    };\n\n    var unregisterScroller = function unregisterScroller(scrollKey) {\n      delete scrollableNodes[scrollKey];\n    };\n\n    var getScrollerPosition = function getScrollerPosition(componentScrollKey) {\n      var locationPositions = positionsByLocation[currentScrollKey];\n      return locationPositions ? locationPositions[componentScrollKey] || null : null;\n    };\n\n    var saveScrollPositions = function saveScrollPositions() {\n      if (!positionsByLocation[currentScrollKey]) positionsByLocation[currentScrollKey] = {};\n      var _window = window;\n      var scrollY = _window.scrollY;\n      var scrollX = _window.scrollX;\n      savePosition('window', {\n        scrollX: scrollX,\n        scrollY: scrollY\n      });\n\n      for (var scrollKey in scrollableNodes) {\n        var scrollerNode = scrollableNodes[scrollKey];\n        var scrollTop = scrollerNode.scrollTop;\n        var scrollLeft = scrollerNode.scrollLeft;\n        savePosition(scrollKey, {\n          scrollTop: scrollTop,\n          scrollLeft: scrollLeft\n        });\n      }\n    };\n\n    var savePosition = function savePosition(scrollKey, position) {\n      positionsByLocation[currentScrollKey][scrollKey] = position;\n    };\n\n    var restoreWindow = function restoreWindow(location) {\n      if (location.action === 'PUSH' || location.action === 'REPLACE') {\n        window.scrollTo(0, 0);\n      } else {\n        var position = getScrollerPosition('window');\n\n        if (position) {\n          var scrollX = position.scrollX;\n          var scrollY = position.scrollY;\n          window.scrollTo(scrollX, scrollY);\n        }\n      }\n    };\n\n    var restoreNode = function restoreNode(scrollKey) {\n      var position = getScrollerPosition(scrollKey);\n\n      if (position) {\n        var node = scrollableNodes[scrollKey];\n        var scrollTop = position.scrollTop;\n        var scrollLeft = position.scrollLeft;\n        node.scrollTop = scrollTop;\n        node.scrollLeft = scrollLeft;\n      }\n    };\n\n    var unlisten = history.listen(function (location) {\n      if (first) {\n        first = false;\n      } else {\n        saveScrollPositions();\n      }\n\n      currentScrollKey = location.state && location.state.__scrollKey || initialScrollKey;\n    });\n\n    var listen = function listen() {\n      var internalUnlisten = history.listen.apply(history, arguments);\n      return function () {\n        return unlisten() && internalUnlisten();\n      };\n    };\n\n    return _extends({}, history, {\n      listen: listen,\n      push: push,\n      replace: replace,\n      restoreScroll: {\n        registerScroller: registerScroller,\n        unregisterScroller: unregisterScroller,\n        restoreWindow: restoreWindow\n      }\n    });\n  };\n};\n\nexports.default = useHistoryRestoreScroll;","map":{"version":3,"sources":["/Users/swati/Desktop/DesignSunday/POSTS/posts/node_modules/react-router-restore-scroll/lib/useHistoryRestoreScroll.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_PathUtils","require","setManualScroll","window","history","scrollRestoration","createKey","Math","random","toString","substr","addScrollKey","locationOrString","location","parsePath","state","__scrollKey","useHistoryRestoreScroll","createHistory","options","undefined","scrollableNodes","positionsByLocation","sessionStorage","JSON","parse","initialScrollKey","currentScrollKey","first","addEventListener","saveScrollPositions","stringify","push","locationWithoutKey","replace","registerScroller","scrollKey","node","restoreNode","unregisterScroller","getScrollerPosition","componentScrollKey","locationPositions","_window","scrollY","scrollX","savePosition","scrollerNode","scrollTop","scrollLeft","position","restoreWindow","action","scrollTo","unlisten","listen","internalUnlisten","apply","restoreScroll","default"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _PathUtils = require('history/lib/PathUtils');\n\nvar setManualScroll = function setManualScroll() {\n  if (typeof window !== 'undefined' && 'scrollRestoration' in window.history) {\n    history.scrollRestoration = 'manual';\n  }\n};\n\nvar createKey = function createKey() {\n  return Math.random().toString(36).substr(2, 6);\n};\n\nvar addScrollKey = function addScrollKey(locationOrString) {\n  var location = typeof locationOrString === 'string' ? (0, _PathUtils.parsePath)(locationOrString) : locationOrString;\n  if (!location.state) location.state = {};\n  location.state.__scrollKey = createKey();\n  return location;\n};\n\nvar useHistoryRestoreScroll = function useHistoryRestoreScroll(createHistory) {\n  return function () {\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    setManualScroll();\n\n    var scrollableNodes = {};\n\n    // TODO: safer sessionStorage stuff\n    var positionsByLocation = sessionStorage.positionsByLocation && JSON.parse(sessionStorage.positionsByLocation) || {};\n\n    var initialScrollKey = sessionStorage.initialScrollKey || createKey();\n    var currentScrollKey = sessionStorage.currentScrollKey || initialScrollKey;\n    var first = true;\n\n    window.addEventListener('beforeunload', function () {\n      saveScrollPositions();\n      sessionStorage.positionsByLocation = JSON.stringify(positionsByLocation);\n      sessionStorage.currentScrollKey = currentScrollKey;\n      sessionStorage.initialScrollKey = initialScrollKey;\n    });\n\n    var history = createHistory(options);\n\n    var push = function push(locationWithoutKey) {\n      var location = addScrollKey(locationWithoutKey);\n      history.push(location);\n    };\n\n    var replace = function replace(locationWithoutKey) {\n      var location = addScrollKey(locationWithoutKey);\n      history.replace(location);\n    };\n\n    var registerScroller = function registerScroller(scrollKey, node) {\n      scrollableNodes[scrollKey] = node;\n      restoreNode(scrollKey);\n    };\n\n    var unregisterScroller = function unregisterScroller(scrollKey) {\n      delete scrollableNodes[scrollKey];\n    };\n\n    var getScrollerPosition = function getScrollerPosition(componentScrollKey) {\n      var locationPositions = positionsByLocation[currentScrollKey];\n      return locationPositions ? locationPositions[componentScrollKey] || null : null;\n    };\n\n    var saveScrollPositions = function saveScrollPositions() {\n      if (!positionsByLocation[currentScrollKey]) positionsByLocation[currentScrollKey] = {};\n      var _window = window;\n      var scrollY = _window.scrollY;\n      var scrollX = _window.scrollX;\n\n      savePosition('window', { scrollX: scrollX, scrollY: scrollY });\n      for (var scrollKey in scrollableNodes) {\n        var scrollerNode = scrollableNodes[scrollKey];\n        var scrollTop = scrollerNode.scrollTop;\n        var scrollLeft = scrollerNode.scrollLeft;\n\n        savePosition(scrollKey, { scrollTop: scrollTop, scrollLeft: scrollLeft });\n      }\n    };\n\n    var savePosition = function savePosition(scrollKey, position) {\n      positionsByLocation[currentScrollKey][scrollKey] = position;\n    };\n\n    var restoreWindow = function restoreWindow(location) {\n      if (location.action === 'PUSH' || location.action === 'REPLACE') {\n        window.scrollTo(0, 0);\n      } else {\n        var position = getScrollerPosition('window');\n        if (position) {\n          var scrollX = position.scrollX;\n          var scrollY = position.scrollY;\n\n          window.scrollTo(scrollX, scrollY);\n        }\n      }\n    };\n\n    var restoreNode = function restoreNode(scrollKey) {\n      var position = getScrollerPosition(scrollKey);\n      if (position) {\n        var node = scrollableNodes[scrollKey];\n        var scrollTop = position.scrollTop;\n        var scrollLeft = position.scrollLeft;\n\n        node.scrollTop = scrollTop;\n        node.scrollLeft = scrollLeft;\n      }\n    };\n\n    var unlisten = history.listen(function (location) {\n      if (first) {\n        first = false;\n      } else {\n        saveScrollPositions();\n      }\n      currentScrollKey = location.state && location.state.__scrollKey || initialScrollKey;\n    });\n\n    var listen = function listen() {\n      var internalUnlisten = history.listen.apply(history, arguments);\n      return function () {\n        return unlisten() && internalUnlisten();\n      };\n    };\n\n    return _extends({}, history, {\n      listen: listen,\n      push: push,\n      replace: replace,\n      restoreScroll: {\n        registerScroller: registerScroller,\n        unregisterScroller: unregisterScroller,\n        restoreWindow: restoreWindow\n      }\n    });\n  };\n};\n\nexports.default = useHistoryRestoreScroll;"]},"metadata":{},"sourceType":"script"}